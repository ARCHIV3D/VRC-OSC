on:
  release:
    types: [created]

jobs:
  release:
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SPOTIFY_CALLBACK: ${{ secrets.SPOTIFY_CALLBACK }}
      SPOTIFY_CLIENT: ${{ secrets.SPOTIFY_CLIENT }}
      SPOTIFY_SECRET: ${{ secrets.SPOTIFY_SECRET }}
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            runner: macos-latest
            zip: vrc-osc,libdebug.dylib,libspotify.dylib
          - target: aarch64-unknown-linux-gnu
            runner: ubuntu-latest
            zip: vrc-osc,libdebug.so,libspotify.so
          - target: i686-pc-windows-msvc
            runner: windows-latest
            zip: vrc-osc.exe,debug.dll,spotify.dll
          - target: i686-unknown-linux-gnu
            runner: ubuntu-latest
            zip: vrc-osc,libdebug.so,libspotify.so
          - target: x86_64-apple-darwin
            runner: macos-latest
            zip: vrc-osc,libdebug.dylib,libspotify.dylib
          - target: x86_64-pc-windows-msvc
            runner: windows-latest
            zip: vrc-osc.exe,debug.dll,spotify.dll
          - target: x86_64-unknown-linux-gnu
            runner: ubuntu-latest
            zip: vrc-osc,libdebug.so,libspotify.so
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v3
      - run: rustup update stable
      - run: rustup target add ${{ matrix.target }}
      - run: cargo install cross
      - run: cross build --release --target ${{ matrix.target }}
      - run: zip -j ${{ matrix.target }}.zip target/${{ matrix.target }}/release/{${{ matrix.zip }}}
        if: ${{ matrix.runner != 'windows-latest' }}
      - run: bash -c '7z a ${{ matrix.target }}.zip ./target/${{ matrix.target }}/release/{${{ matrix.zip }}}'
        if: ${{ matrix.runner == 'windows-latest' }}
      - run: gh release upload ${{ github.ref_name }} ${{ matrix.target }}.zip --clobber
